iotool:
  batch_size: 4
  shuffle: False
  num_workers: 1
  collate_fn: CollateSparse
  dataset:
    name: LArCVDataset
    data_keys:
    - DATA_DIR/mpvmpr_082021_test_small.root
    limit_num_files: 10
    #event_list: '[189]'
    #skip_event_list: '[3]'
    schema:
      input_data:
        - parse_sparse3d_scn
        - sparse3d_reco
        - sparse3d_reco_chi2
      segment_label:
        - parse_sparse3d_scn
        - sparse3d_pcluster_semantics_ghost
      cluster_label:
        - parse_cluster3d_clean_full
        #- parse_cluster3d_full
        - cluster3d_pcluster
        - particle_pcluster
        - particle_mpv
        - sparse3d_pcluster_semantics
      particles_label:
        - parse_particle_points_with_tagging
        - sparse3d_pcluster
        - particle_corrected
      kinematics_label:
        - parse_cluster3d_kinematics_clean
        - cluster3d_pcluster
        - particle_corrected
        - particle_mpv
        - sparse3d_pcluster_semantics
      particle_graph:
        - parse_particle_graph_corrected
        - particle_corrected
        - cluster3d_pcluster
      particles_asis:
        - parse_particle_asis
        - particle_pcluster
        - cluster3d_pcluster
model:
  name: full_chain
  modules:
    chain:
      enable_uresnet: True
      enable_ppn: True
      enable_cnn_clust: True
      enable_dbscan: True
      process_fragments: True
      use_ppn_in_gnn: True
      use_supp_in_gnn: True
      use_true_fragments: False
      enable_gnn_shower: True
      enable_gnn_track: True
      enable_gnn_inter: True
      enable_gnn_kinematics: False
      enable_cosmic: False
      enable_ghost: True
      verbose: True

    # Shower GNN config
    grappa_shower:
      base:
        node_type: 0
        node_min_size: 3
        add_start_point: True
        add_start_dir: True
        start_dir_max_dist: 5
      node_encoder:
        name: 'geo'
        use_numpy: True
      edge_encoder:
        name: 'geo'
        use_numpy: True
      gnn_model:
        name: meta #modular_meta
        edge_feats: 19
        node_feats: 28 #16 #24 #w/ PPN
        node_classes: 2
        edge_classes: 2
        node_output_feats: 64
        edge_output_feats: 64
    grappa_shower_loss:
      node_loss:
        name: primary
        high_purity: True
        use_group_pred: True
      edge_loss:
        name: channel
        high_purity: True
        source_col: 5
        target_col: 6

    # DBScan Fragmenter config
    dbscan:
      dbscan_fragment_manager:
        eps: [1.999, 1.999, 4.999]
        num_classes: 4 # Ignores LE
        cluster_classes: [0, 2, 3] #[0, 1, 2, 3]
        track_label: 1
        michel_label: 2
        delta_label: 3
        track_clustering_method: 'masked_dbscan' # masked_dbscan, closest_path
        ppn_score_threshold: 0.5 #0.9
        ppn_type_score_threshold: 0.5 #0.3

    # Track GNN config
    grappa_track:
      base:
        node_type: 1
        node_min_size: 3
        add_start_point: True
        add_start_dir: True
        start_dir_max_dist: 5
      node_encoder:
        name: 'geo'
        use_numpy: True
      edge_encoder:
        name: 'geo'
        use_numpy: True
      gnn_model:
        name: meta #modular_meta
        edge_feats: 19
        node_feats: 28 #22 #w/ start point and direction
        node_classes: 2
        edge_classes: 2
        node_output_feats: 64
        edge_output_feats: 64
    grappa_track_loss:
      edge_loss:
        name: channel
        source_col: 5
        target_col: 6

    # Interaction GNN config
    grappa_inter:
      use_shower_primary: False
      type_net:
        num_hidden: 32
      vertex_net:
        num_hidden: 32
      base:
        node_type: [0, 1, 2, 3]
        node_min_size: 3
        add_start_point: True
        add_start_dir: True
        start_dir_max_dist: 5
        kinematics_mlp: True # Compute PID in grappa_inter, but not momentum
        kinematics_type: True
        vertex_mlp: True
      node_encoder:
        name: 'geo'
        use_numpy: True
      edge_encoder:
        name: 'geo'
        use_numpy: True
      gnn_model:
        name: meta #modular_meta
        edge_feats: 19
        node_feats: 28 #w/ start point and direction
        node_classes: 2
        edge_classes: 2
        node_output_feats: 64
        edge_output_feats: 64
    grappa_inter_loss:
      edge_loss:
        name: channel
        source_col: 6
        target_col: 7
      node_loss:
        name: kinematics
        balance_classes: True
        spatial_size: 768

    # CNN Clustering config
    graph_spice:
      skip_classes: [0, 2, 3, 4]
      min_points: 3
      node_dim: 22
      use_raw_features: True
      constructor_cfg:
        mode: 'knn'
        seg_col: -1
        cluster_col: 5
        edge_mode: 'attributes'
        hyper_dimension: 22
        edge_cut_threshold: 0.1
      embedder_cfg:
        graph_spice_embedder:
          segmentationLayer: False
          feature_embedding_dim: 16
          spatial_embedding_dim: 3
          num_classes: 5
          occupancy_mode: 'softplus'
          covariance_mode: 'softplus'
        uresnet:
          filters: 32
          input_kernel: 5
          depth: 5
          reps: 2
          spatial_size: 768
          num_input: 4 # 1 feature + 3 normalized coords
          allow_bias: False
          activation:
            name: lrelu
            args:
              negative_slope: 0.33
          norm_layer:
            name: batch_norm
            args:
              eps: 0.0001
              momentum: 0.01
      kernel_cfg:
        name: 'bilinear'
        num_features: 32
    graph_spice_loss:
      name: graph_spice_edge_loss
      invert: True
      kernel_lossfn: 'lovasz_hinge'
      edge_loss_cfg:
        loss_type: 'LogDice'
      eval: True

    # UResNet + PPN
    uresnet_ppn:
      uresnet_lonely:
        ghost: True
        num_input: 2
        num_classes: 5
        filters: 16
        depth: 6
        reps: 2
        spatial_size: 768
        weight_loss: False
        activation:
          name: lrelu
          args:
            negative_slope: 0.0 #0.33
        allow_bias: False
        norm_layer:
          name: batch_norm
          args:
            eps: 0.0001
            momentum: 0.01
      ppn:
        ghost: True
        ppn_resolution: 1.0
        mask_loss_name: 'BCE'
        depth: 6
        filters: 16
        num_classes: 5
        ppn_score_threshold: 0.6
        spatial_size: 768
        classify_endpoints: True
        particles_label_seg_col: -3

    # Kinematics GNN config
    grappa_kinematics:
      use_true_particles: False
      momentum_net:
        num_hidden: 32
      base:
        node_type: -1
        node_min_size: -1
        network: complete
        edge_max_dist: -1
        edge_dist_metric: set
        edge_dist_numpy: True
        kinematics_mlp: True # Compute momentum, not PID, in grappa_kinematics
        kinematics_momentum: True
      node_encoder:
        name: 'mix_debug'
        normalize: True
        geo_encoder:
          more_feats: True
        cnn_encoder:
          name: 'cnn' #'cnn2'
          res_encoder:
            coordConv: True
            pool_mode: 'avg'
            latent_size: 64 #256
            input_kernel: 3
            spatial_size: 768
      edge_encoder:
        name: 'mix_debug'
        normalize: True
        geo_encoder:
          more_feats: True
        cnn_encoder:
          name: 'cnn' #'cnn2'
          res_encoder:
            coordConv: True
            pool_mode: 'avg'
            latent_size: 32
            spatial_size: 768
      gnn_model:
        name: nnconv_old #modular_nnconv
        edge_feats: 51
        node_feats: 83 #275
        node_output_feats: 128
        edge_output_feats: 64
        edge_classes: 2
        node_classes: 5
        leak: 0.33
    grappa_kinematics_loss:
      node_loss:
        name: kinematics
        reg_loss: l2
      edge_loss:
        name: channel
        target: particle_forest

    # Cosmic discrimination
    cosmic_discriminator:
      use_input_data: False
      use_true_interactions: False
      res_encoder:
        coordConv: True
        pool_mode: 'avg'
        latent_size: 2
        spatial_size: 768
    cosmic_loss:
      node_loss:
        name: type
        target_col: 8
        balance_classes: True

  network_input:
    - input_data
    - segment_label
    - cluster_label
  loss_input:
    - segment_label
    - particles_label
    - cluster_label
    - kinematics_label
    - particle_graph
trainval:
  seed: 123
  unwrapper: unwrap_3d_mink
  concat_result: ['points', 'ppn_coords', 'mask_ppn', 'ppn_layers', 'classify_endpoints', 'seediness', 'margins', 'embeddings', 'fragments', 'fragments_seg', 'shower_fragments', 'shower_edge_index','shower_edge_pred','shower_node_pred','shower_group_pred','track_fragments', 'track_edge_index', 'track_node_pred', 'track_edge_pred', 'track_group_pred', 'particle_fragments', 'particle_edge_index', 'particle_node_pred', 'particle_edge_pred', 'particle_group_pred', 'particles','inter_edge_index', 'inter_node_pred', 'inter_edge_pred', 'inter_particles', 'node_pred_p', 'node_pred_type', 'flow_edge_pred', 'kinematics_particles', 'kinematics_edge_index', 'clust_fragments', 'clust_frag_seg', 'interactions', 'inter_cosmic_pred', 'node_pred_vtx', 'total_num_points', 'total_nonghost_points', 'spatial_embeddings', 'occupancy', 'hypergraph_features', 'features', 'feature_embeddings', 'covariance']
  gpus: '0'
  weight_prefix: ./weights_trash/snapshot
  iterations: 10
  report_step: 1
  checkpoint_step: 100
  model_path: 'DATA_DIR/weights_full_mpvmpr_082021.ckpt'
  log_dir: ./log_trash
  train: False
  debug: False
  minibatch_size: -1
  optimizer:
    name: Adam
    args:
      lr: 0.001

