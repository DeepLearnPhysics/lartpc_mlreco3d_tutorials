iotool:
  batch_size: 4
  shuffle: False
  num_workers: 4
  collate_fn: CollateSparse
  dataset:
    name: LArCVDataset
    data_keys:
    - DATA_DIR/wire_mpvmpr_2020_04_test_small.root
    limit_num_files: 10
    #event_list: '[189]'
    #skip_event_list: '[3]'
    schema:
      input_data:
        - parse_sparse3d_scn
        - sparse3d_reco
        - sparse3d_reco_chi2
      segment_label:
        - parse_sparse3d_scn
        - sparse3d_pcluster_semantics_ghost
      cluster_label:
        - parse_cluster3d_clean_full
        #- parse_cluster3d_full
        - cluster3d_pcluster
        - particle_pcluster
        - particle_mpv
        - sparse3d_pcluster_semantics
      particles_label:
        - parse_particle_points_with_tagging
        - sparse3d_pcluster
        - particle_corrected
      kinematics_label:
        - parse_cluster3d_kinematics_clean
        - cluster3d_pcluster
        - particle_corrected
        - particle_mpv
        - sparse3d_pcluster_semantics
      particle_graph:
        - parse_particle_graph_corrected
        - particle_corrected
        - cluster3d_pcluster
      particles_asis:
        - parse_particle_asis
        - particle_pcluster
        - cluster3d_pcluster
  #sampler:
  #  batch_size: 12
  #  name: RandomSequenceSampler
model:
  name: full_chain
  modules:
    chain:
      enable_uresnet: True
      enable_ppn: True
      enable_cnn_clust: True
      enable_gnn_shower: True
      enable_gnn_track: True
      enable_gnn_particle: False
      enable_gnn_inter: True
      enable_gnn_kinematics: True
      enable_cosmic: True
      enable_ghost: True
      use_ppn_in_gnn: True
      verbose: True

    # Shower GNN config
    grappa_shower:
      #freeze_weights: True
      base:
        node_type: 0
        node_min_size: 3
        add_start_point: True
        add_start_dir: True
        start_dir_max_dist: 5
      node_encoder:
        name: 'geo'
        use_numpy: False
      edge_encoder:
        name: 'geo'
        use_numpy: False
      gnn_model:
        name: meta #modular_meta
        edge_feats: 19
        node_feats: 28 #16 #24 #w/ PPN
        node_classes: 2
        edge_classes: 2
        node_output_feats: 64
        edge_output_feats: 64
        aggr: add
        leakiness: 0.1
        num_mp: 3
    grappa_shower_loss:
      node_loss:
        name: primary
        high_purity: True
        use_group_pred: True
        group_pred_alg: score
      edge_loss:
        name: channel
        high_purity: True
        source_col: 5
        target_col: 6

    # DBScan Fragmenter config
    dbscan_frag:
      dim: 3
      eps: [1.999, 3.999, 1.999, 4.999]
      min_samples: 1
      min_size: [3,3,3,3]
      num_classes: 4 # Ignores LE
      cluster_classes: [0, 2, 3] #[0, 1, 2, 3]
      track_label: 1
      michel_label: 2
      delta_label: 3
      track_clustering_method: 'closest_path' # masked_dbscan, closest_path
      ppn_score_threshold: 0.9
      ppn_type_threshold: 0.3
      ppn_distance_threshold: 1.999
      ppn_mask_radius: 5

    # Track GNN config
    grappa_track:
      base:
        node_type: 1
        node_min_size: 3
        add_start_point: True
        add_start_dir: True
        start_dir_max_dist: 5
      node_encoder:
        name: 'geo'
        use_numpy: False
      edge_encoder:
        name: 'geo'
        use_numpy: False
      gnn_model:
        name: meta #modular_meta
        edge_feats: 19
        node_feats: 28 #22 #w/ start point and direction
        node_classes: 2
        edge_classes: 2
        node_output_feats: 64
        edge_output_feats: 64
        aggr: 'add'
        leakiness: 0.1
        num_mp: 3
    grappa_track_loss:
      edge_loss:
        name: channel
        high_purity: False
        source_col: 5
        target_col: 6

    # Particle GNN config (shower + track combined)
    grappa_particle:
      base:
        node_type: -1
        node_min_size: 10
      node_encoder:
        name: 'geo'
        use_numpy: True
      edge_encoder:
        name: 'geo'
        use_numpy: True
      gnn_model:
        name: meta #modular_meta
        edge_feats: 19
        node_feats: 24 #16 #24 #w/ PPN
        node_classes: 2
        edge_classes: 2
        node_output_feats: 64
        edge_output_feats: 64
        aggr: add
        leakiness: 0.1
        num_mp: 3
    grappa_particle_loss:
      node_loss:
        name: primary
        loss: CE
        reduction: sum
        balance_classes: False
        high_purity: True
        use_group_pred: True
        group_pred_alg: score
      edge_loss:
        name: channel
        loss: CE
        reduction: sum
        balance_classes: False
        target: group
        high_purity: True
        source_col: 5
        target_col: 6

    # Interaction GNN config
    grappa_inter:
      #model_path: 'blabla'
      type_net:
        #model_path: 'blabla'
        num_hidden: 32
      vertex_net:
        num_hidden: 32
      base:
        node_type: [0, 1, 2, 3]
        node_min_size: 3
        add_start_point: True
        add_start_dir: True
        start_dir_max_dist: 5
        group_pred: 'score'
        kinematics_mlp: True # Compute PID in grappa_inter, but not momentum
        kinematics_type: True
        kinematics_momentum: False
        vertex_mlp: True
      node_encoder:
        name: 'geo'
        use_numpy: False
      edge_encoder:
        name: 'geo'
        use_numpy: False
      gnn_model:
        name: meta #modular_meta
        edge_feats: 19
        node_feats: 28 #w/ start point and direction
        node_classes: 2
        edge_classes: 2
        node_output_feats: 64
        edge_output_feats: 64
        aggr: 'add'
        leakiness: 0.1
        num_mp: 3
    grappa_inter_loss:
      edge_loss:
        name: channel
        loss: CE
        source_col: 6
        target_col: 7
        reduction: sum
        balance_classes: False
        target: group
        high_purity: False
      node_loss:
        name: kinematics
        type_loss: CE
        balance_classes: True
        spatial_size: 768

    # full chain loss and weighting
    full_chain_loss:
      segmentation_weight: 1.
      clustering_weight: 1.
      ppn_weight: 1.
      particle_gnn_weight: 1.
      shower_gnn_weight: 1.
      track_gnn_weight: 1.
      inter_gnn_weight: 1.
      kinematics_weight: 1.
      kinematics_p_weight: 1.
      kinematics_type_weight: 1.
      flow_weight: 1.
      cosmic_weight: 1.

    # CNN Clustering config
    spice:
      network_base:
        spatial_size: 768
        data_dim: 3
        features: 4
        leakiness: 0.33
      spatial_embeddings:
        seediness_dim: 1
        sigma_dim: 1
        embedding_dim: 3
        coordConv: True
        #model_path: 'blabla'
      uresnet:
        filters: 64
        input_kernel_size: 7
        num_strides: 7
        reps: 2
      fragment_clustering:
        s_thresholds: [0., 0., 0., 0.35] #[0., 0.2, 0., 0.35]
        p_thresholds: [0.95, 0.95, 0.95, 0.95] #[0.95, 0.9, 0.95, 0.95]
        cluster_all: False
        cluster_classes: [1]
        min_frag_size: 10
        min_voxels: 2
    spice_loss:
      name: se_vectorized_inter
      seediness_weight: 1.0
      embedding_weight: 1.0
      smoothing_weight: 1.0
      min_voxels: 2
      mask_loss_fn: lovasz_hinge

    # UResNet + PPN
    uresnet_ppn:
      uresnet_lonely:
        freeze: False
        num_strides: 6
        filters: 16
        num_classes: 5
        data_dim: 3
        spatial_size: 768
        ghost: True
        features: 2
        weight_loss: True
        leakiness: 0.
        #model_path: 'blabla'
        #model_name: 'uresnet_lonely'
        #freeze_weights: True
      ppn:
        num_strides: 6
        filters: 16
        num_classes: 5
        data_dim: 3
        downsample_ghost: True
        use_encoding: False
        ppn_num_conv: 1
        #weight_seg: 5.0
        weight_ppn: 0.9
        score_threshold: 0.5
        ppn1_size: 24
        ppn2_size: 96
        spatial_size: 768
        classify_endpoints: True
        model_path: 'DATA_DIR/weights_ppn3_snapshot-1999.ckpt'
        model_name: 'ppn'
        #freeze_weights: True
    # Kinematics GNN config
    grappa_kinematics:
      use_true_particles: False
      #model_path: 'blabla'
      #model_name: 'kinematics_edge_predictor'
      momentum_net:
        #model_path: 'blabla'
        num_hidden: 32
      base:
        node_type: -1
        node_min_size: -1
        network: complete
        edge_max_dist: -1
        edge_dist_metric: set
        edge_dist_numpy: True
        kinematics_mlp: True # Compute momentum, not PID, in grappa_kinematics
        kinematics_type: False
        kinematics_momentum: True
      node_encoder:
        #model_path: 'blabla'
        name: 'mix_debug'
        normalize: True
        geo_encoder:
          more_feats: True
        cnn_encoder:
          name: 'cnn2'
          res_encoder:
            coordConv: True
            pool_mode: 'avg'
            latent_size: 64 #256
          network_base:
            spatial_size: 768
            data_dim: 3
            features: 4
            leakiness: 0.33
          uresnet_encoder:
            filters: 32
            num_strides: 9
            num_filters: 16
            reps: 2
            num_classes: 5
            input_kernel: 3
      edge_encoder:
        #model_path: 'blabla'
        name: 'mix_debug'
        normalize: True
        geo_encoder:
          more_feats: True
        cnn_encoder:
          name: 'cnn2'
          res_encoder:
            coordConv: True
            pool_mode: 'avg'
            latent_size: 32
          network_base:
            spatial_size: 768
            data_dim: 3
            features: 4
            leakiness: 0.33
          uresnet_encoder:
            filters: 32
            num_strides: 9
            num_filters: 32
            reps: 2
            num_classes: 5
            input_kernel: 3
      gnn_model:
        name: nnconv_old #modular_nnconv
        edge_feats: 51
        node_feats: 83 #275
        node_output_feats: 128
        edge_output_feats: 64
        edge_classes: 2
        node_classes: 5
        aggr: 'add'
        leak: 0.33
        num_mp: 3
    grappa_kinematics_loss:
      node_loss:
        name: kinematics
        reg_loss: l2
      edge_loss:
        name: channel
        reduction: sum
        balance_classes: False
        target: particle_forest
        high_purity: False

    # Cosmic discrimination
    cosmic_discriminator:
      use_input_data: False
      use_true_interactions: False
      res_encoder:
        coordConv: True
        pool_mode: 'avg'
        latent_size: 2
      network_base:
        spatial_size: 768
        data_dim: 3
        features: 4
        leakiness: 0.33
      uresnet_encoder:
        num_strides: 9
        filters: 16
        features: 16 # nInputFeatures
    cosmic_loss:
      node_loss:
        name: type
        target_col: 8
        balance_classes: True
  network_input:
    - input_data
  loss_input:
    - segment_label
    - particles_label
    - cluster_label
    - kinematics_label
    - particle_graph
trainval:
  seed: 123
  unwrapper: unwrap_3d_scn
  concat_result: ['seediness', 'margins', 'embeddings', 'fragments', 'fragments_seg', 'shower_fragments', 'shower_edge_index','shower_edge_pred','shower_node_pred','shower_group_pred','track_fragments', 'track_edge_index', 'track_node_pred', 'track_edge_pred', 'track_group_pred', 'particle_fragments', 'particle_edge_index', 'particle_node_pred', 'particle_edge_pred', 'particle_group_pred', 'particles','inter_edge_index', 'inter_node_pred', 'inter_edge_pred', 'node_pred_p', 'node_pred_type', 'flow_edge_pred', 'kinematics_particles', 'kinematics_edge_index', 'clust_fragments', 'clust_frag_seg', 'interactions', 'inter_cosmic_pred', 'node_pred_vtx', 'total_num_points', 'total_nonghost_points']
  gpus: '0'
  weight_prefix: ./weights_trash/snapshot
  iterations: 652
  report_step: 1
  checkpoint_step: 100
  model_path: 'DATA_DIR/weights_full5_snapshot-999.cpkt'
  log_dir: ./log_trash
  train: False
  debug: False
  minibatch_size: -1
  optimizer:
    name: Adam
    args:
      lr: 0.001

